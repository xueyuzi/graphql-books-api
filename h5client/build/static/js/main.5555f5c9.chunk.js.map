{"version":3,"sources":["pages/home.jsx","pages/book-detail.jsx","pages/cart.jsx","pages/user.jsx","App.jsx","serviceWorker.js","index.jsx","../../gql/books.gql"],"names":["useLazyQuery","GET_BOOK_LIST","getBooks","data","loading","queryData","useQuery","GET_QUERY","console","log","search","client","useApolloClient","useEffect","variables","query","placeholder","maxLength","onSubmit","v","writeData","books","map","book","to","id","full","Header","title","extra","author","Body","tags","tag","small","params","useRouteMatch","history","useHistory","GET_BOOK","mode","icon","type","onLeftClick","goBack","style","display","justifyContent","alignItems","width","src","image","alt","margin","lineHeight","summary","onClick","info","App","location","useLocation","className","position","height","top","unselectedTintColor","tintColor","barTintColor","Item","key","selectedIcon","selected","pathname","match","onPress","replace","exact","path","component","HomePage","BookPage","Boolean","window","hostname","cache","InMemoryCache","dataIdFromObject","object","__typename","defaultDataIdFromObject","cacheRedirects","Query","_","args","getCacheKey","ApolloClient","uri","link","HttpLink","typeDefs","gql","resolvers","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","doc","loc","source","definitionRefs","findOperation","name","i","definitions","length","element","value","oneQuery","operationName","newDoc","kind","hasOwnProperty","opRefs","Set","allRefs","newRefs","forEach","refName","add","size","prevRefs","has","childRef","op","push","def","refs","collectFragmentReferences","node","selectionSet","selections","selection","variableDefinitions","module","exports"],"mappings":"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","file":"static/js/main.5555f5c9.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { SearchBar, Card, Tag } from \"antd-mobile\";\nimport { GET_BOOK_LIST, GET_QUERY } from \"../../../gql/books.gql\";\nimport { useLazyQuery, useQuery, useApolloClient } from \"@apollo/react-hooks\";\nimport { Link } from \"react-router-dom\";\nexport default () => {\n  const [getBooks, { loading, data }] = useLazyQuery(GET_BOOK_LIST);\n  const { data:queryData } = useQuery(GET_QUERY);\n  console.log(queryData)\n  const { search } = queryData;\n  const client = useApolloClient();\n  useEffect(() => {\n    getBooks({ variables: { query:search } });\n  }, [search]);\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n  return (\n    <div>\n      <SearchBar\n        placeholder={search + \" (只显示20条搜索结果)\"}\n        maxLength={8}\n        onSubmit={v => client.writeData({data:{ search: v }})}\n      />\n      {data &&\n        data.books &&\n        data.books.map(book => (\n          <Link to={`/home/book/${book.id}`}>\n            <Card full>\n              <Card.Header title={book.title} extra={book.author} />\n              <Card.Body>\n                {book.tags ? (\n                  book.tags.map(tag => <Tag small>{tag}</Tag>)\n                ) : (\n                  <></>\n                )}\n              </Card.Body>\n            </Card>\n          </Link>\n        ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useRouteMatch,useHistory } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_BOOK } from \"../../../gql/books.gql\";\nimport { NavBar, Icon, Card,Button,Toast } from \"antd-mobile\";\nexport default () => {\n  const match = useRouteMatch();\n  const { params } = match;\n  const history = useHistory();\n  const { loading, data } = useQuery(GET_BOOK, {\n    variables: { id: params.id }\n  });\n\n  return (\n    <div>\n      <NavBar\n        mode=\"light\"\n        icon={<Icon type=\"left\" />}\n        onLeftClick={() => history.goBack()}\n      >\n        图书详情\n      </NavBar>\n      {data && data.book && (\n        <div>\n          <Card>\n            <Card.Body>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\"\n                }}\n              >\n                <img width=\"150\" src={data.book.image} alt=\"图书封面\" />\n              </div>\n            </Card.Body>\n          </Card>\n          <div style={{ margin: \"20px\", lineHeight: \"1.5\" }}>\n            <h3>图书描述</h3>\n            <div>{data.book.summary}</div>\n          </div>\n          <Button type=\"primary\" onClick={()=>Toast.info(\"已加入到借书单\")}>借书</Button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nexport default ()=>{\n    return <div>CartPage</div>\n}","import React from \"react\";\nexport default ()=>{\n    return <div>UserPage</div>\n}","import React, { useState, useEffect } from \"react\";\n\nimport { TabBar } from \"antd-mobile\";\nimport { useHistory, useLocation, Route,Redirect } from \"react-router-dom\";\nimport HomePage from \"./pages/home\";\nimport BookPage from \"./pages/book-detail\";\nimport CartPage from \"./pages/cart\";\nimport UserPage from \"./pages/user\";\nfunction App() {\n  const location = useLocation();\n  const history = useHistory();\n  return (\n    <div\n      className=\"App\"\n      style={{ position: \"fixed\", height: \"100%\", width: \"100%\", top: 0 }}\n    >\n      <TabBar\n        unselectedTintColor=\"#949494\"\n        tintColor=\"#33A3F4\"\n        barTintColor=\"white\"\n      >\n        <TabBar.Item\n          title=\"书库\"\n          key=\"home\"\n          icon={<i className=\"iconfont\">&#xe7c6;</i>}\n          selectedIcon={<i className=\"iconfont selected\">&#xe7c6;</i>}\n          selected={location.pathname.match(\"home\")}\n          onPress={() => history.replace(\"/home\")}\n        >\n          <Route exact path=\"/\">\n            <Redirect to=\"/home\"/>\n          </Route>\n          <Route exact path=\"/home\" component={HomePage} />\n          <Route exact path=\"/home/book/:id\" component={BookPage} />\n        </TabBar.Item>\n        <TabBar.Item\n          title=\"借/还书\"\n          key=\"cart\"\n          selected={location.pathname.match(\"cart\")}\n          icon={<i className=\"iconfont\">&#xe7b3;</i>}\n          selectedIcon={<i className=\"iconfont selected\">&#xe7b3;</i>}\n          onPress={() => history.replace(\"/cart\")}\n        >\n          <CartPage />\n        </TabBar.Item>\n        <TabBar.Item\n          title=\"我的\"\n          key=\"user\"\n          selected={location.pathname.match(\"user\")}\n          icon={<i className=\"iconfont\">&#xe7ae;</i>}\n          selectedIcon={<i className=\"iconfont selected\">&#xe7ae;</i>}\n          onPress={() => history.replace(\"/user\")}\n        >\n          <UserPage />\n        </TabBar.Item>\n      </TabBar>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ApolloClient,{gql} from \"apollo-boost\";\nimport { InMemoryCache, defaultDataIdFromObject } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport {GET_QUERY} from \"../../gql/books.gql\"\n\nconst cache = new InMemoryCache({\n  dataIdFromObject: object => {\n    switch (object.__typename) {\n      case \"Book\":\n        console.log(object);\n        return object.id; // use the `key` field as the identifier\n      default:\n        return defaultDataIdFromObject(object); // fall back to default handling\n    }\n  },\n  cacheRedirects: {\n    Query: {\n      book: (_, args, { getCacheKey }) =>\n        getCacheKey({ __typename: \"Book\", id: args.id })\n    }\n  }\n});\nconst client = new ApolloClient({\n  uri: \"http://gql.xueyuzi.com:4000\",\n  link: new HttpLink(),\n  cache,\n  typeDefs:gql`\n  extend type Query {\n    search: String\n  }\n`,\n  resolvers:{}\n});\ncache.writeData({\n  data: {\n    search: \"三国志\"\n  }\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Router>\n      <App />\n    </Router>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"OneBOOK\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Book\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"author_intro\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"author\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"summary\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"rating\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"tags\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"pubdate\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"image\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GET_BOOK_LIST\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"query\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"books\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"query\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"query\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"OneBOOK\"},\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GET_BOOK\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"book\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"OneBOOK\"},\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"GET_QUERY\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"search\"},\"arguments\":[],\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"client\"},\"arguments\":[]}]}]}}],\"loc\":{\"start\":0,\"end\":296}};\n    doc.loc.source = {\"body\":\"fragment OneBOOK on Book {\\n  id\\n  title\\n  author_intro\\n  author\\n  summary\\n  rating\\n  tags\\n  pubdate,\\n  image\\n}\\n\\nquery GET_BOOK_LIST($query:String!){\\n  books(query: $query){\\n    ...OneBOOK\\n  }\\n}\\nquery GET_BOOK($id:String!){\\n  book(id:$id){\\n    ...OneBOOK\\n  }\\n}\\n\\nquery GET_QUERY{\\n  search @client\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"GET_BOOK_LIST\"] = oneQuery(doc, \"GET_BOOK_LIST\");\n        \n        module.exports[\"GET_BOOK\"] = oneQuery(doc, \"GET_BOOK\");\n        \n        module.exports[\"GET_QUERY\"] = oneQuery(doc, \"GET_QUERY\");\n        \n"],"sourceRoot":""}